Основные этапы решения задачи по дедуктивной верификации:

1. Написание постусловия в с-файле. 
   
    Постусловие я определила следующим образом: результат работы функции element-equality на элементах заданного массива а
    (аргументы функции -- элемент массива с индексом 1, последний элемент, сам массив)
    равен результату работы верифицируемой функции element_equality.

2. Задание функции element-equality в lisp-файле.

  Сначала мы проверяем, что граница диапазона i или граница диапазона  j не является натуральным числом. Если это так, то функция возвращает 1. 
  Это происходит потому, что результирующая переменная result инициализируется единицей еще до входа в цикл, а в данном случае цикл начаться
  не может.

  Далее проверяем, корректно ли заданы границы диапазона: не равна ли нижняя граница 0 (цикл у нас начинает работать с 1) и не превышает ли нижняя граница верхнюю. 
  Если хотя бы одна из этих аварийных ситуаций происходит, то result == 1 по тем же причинам, что и выше.

  Если всё в порядке и мы вошли в цикл, то анализируем следующие ситуации: 

      а) у нас массив единичной длины. Тогда функция возвращает значение 1, т.к. любой элемент массива равен самому себе;

      б) длина массива больше 1. Тогда сравниваем соседние элементы, как это происходит в верифицируемой функции element_equality. 
      Если они не равны, то функция возвращает 0. Если же они равны, то происходит рекурсивный вызов функции element-equality
      с верхней границей, уменьшенной на 1.
      
      Рекурсивные вызовы происходят до тех пор, пока мы либо не обнаружим неравные элементы массива, либо, 
      если все элементы равны, не придем к массиву единичной длины (базис рекурсии)



P.S. К сожалению, мне так и не удалось запустить систему C-lightVer, поэтому верификация получилась отчасти теоретическая :=)
