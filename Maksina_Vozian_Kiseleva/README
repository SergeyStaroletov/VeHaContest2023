>> Задача Model Checking "Луна-25"
БКУ посылает команду на запуск акселерометра и двигателя, при этом не проверяет запустился ли акселерометр.
формула ltl в данной ситуации: GF(двигатель_запущен -> запущен_акселерометр).
Таким образом, двигатель будет запущен только когда акселерометр тоже запущен.
Это обеспечивается за счет раздельного запуска с подстверждением.
1. подается команда на запуск акселерометра.
2. ожидается подстверждение от БИУСа
3. если подствеждение получено, то подается команда на запуск двигателя.
4. если подтверждение не получено, то возвращаемся на шаг 1.

Для более общей ситуации можно использовать формулу:
ltl{[]((trans_run==1)->(<>((dv_run==1) && (acc_run==1))))}
Всегде если начат переход на эл.орбиту, когда-нибудь запустятся двигатель и акселерометр.

Возникла проблема с разграничением времени дейстия процессов. 
Программа не проходит верификацию из-за того, что один из компонент, двигатель или биус, в одном случае никогда не получают управление.
Мы не успели решить данную проблему. Но можем предложить идею решения: каналы, которые будут выступать в качестве семафоров.
При записи в заполненный канал процесс блокируется до тех пор, пока другой процесс не очистит канал.
Таким образом можно описать процесс взаимоействия модулей для данной модели.

>> Задача по дедуктивной верификации
Постусловие формируется как равенство результата применения функции equality при прохождении всех элементов массива, индексы которых 
начинаются от нижней границы и заканчиваются верхней границей включительно (описание функции задано в файле equality.lisp), и переменной 
result, значение которой определяется результатом применения функции element-equality в файле element-equality.с.

Описание функции equality в файле equality.lisp:
Вначале проверяется, являются ли нижняя и верхняя границы массива i и j натуральными числами. Если одна из них не является натуральным 
числом, то функция возвращает 0. Второе условие if проверяет, больше ли i, чем j. Если да, то функция возвращает 0. Оба представленных 
условия свидетельствуют о некорректном вводе. Третье условие if проверяет, равны ли i и j. Если они равны, то возвращается 1, что 
свидетельствует о равенстве элементов. Если ни одно из вышеперечисленных условий не выполняется, то функция проверяет, равны ли элементы 
по индексам i и j в массиве a. Если они равны, то выполняется рекурсивный вызов функции равенства, при этом i остается неизменным, а j 
уменьшается на 1, фактически переходя к следующим элементам в диапазоне.

